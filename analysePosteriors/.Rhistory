# Analyse based on Vlek Network
posteriorsV <- "Posteriors.csv"
posteriorsG <- "PosteriorsGenerated.csv"
### generate BNs
library(bnlearn)
library(tidyverse)
library(readr)
df <- read_csv(raw_data_file)
f <- nrow(df)
df$s1 <- ifelse(df$motive_1_0 == 1 & df$sneak_1_0 == 1 & df$stealing_1_0, 1, 0)
df$s2 <- ifelse(df$object_dropped_accidentally_0 == 1, 1, 0)
df$s3 <- ifelse(df$s1 == 0 & df$s2 == 0, 1, 0)
#df$constraint <- ifelse(df$scn1 == 0 & df$scn2 == 0, 1, 0)
nrow(df %>% filter(s3 == 1))/f
nrow(df %>% filter(s2 == 1))/f
nrow(df %>% filter(s1 == 1))/f
nrow(df %>% filter(s3 == 1))/f+nrow(df %>% filter(s2 == 1))/f+nrow(df %>% filter(s1 == 1))/f
nrow(df %>% filter(E_psych_report_1_0 == 0 & motive_1_0 == 1))/(nrow(df %>% filter(motive_1_0 == 1)))
fKB <- data.frame(lapply(df, factor))
View(fKB)
p1 <- read_csv(posteriorsG)
fp1 <- data.frame(lapply(p1, factor))
colnames(fp1) <- c("Network", "ev", "s1", "s2", "s3", "n", "incompatible")
fp1$incompatible <- 0
fp1 <- subset(fp1, select = -c(n))
View(fp1)
p <- read_csv(posteriorsV)
fp <- data.frame(lapply(p, factor))
colnames(fp) <- c("Network", "ev", "s1", "s2", "s3", "n", "incompatible")
fp$incompatible <- 0
fp <- subset(fp, select = -c(n))
View(fp)
fp <- rbind(fp1, fp)
View(fp)
k <- fKB
k$evSet <- paste(k$E_psych_report_1_0, k$E_camera_1, k$E_camera_seen_stealing_1_0, k$E_object_gone_0, sep=", ")
k$ev <- paste0("(", k$evSet, ")")
sel <- subset(k, select = c(s1, s2, s3, ev))
x <- data.frame(matrix(nrow = 10000, ncol = 0))
x$ev <- k$ev
x$s1<- ifelse(sel$s1==1, 1, 0)
x$s2<- ifelse(sel$s2==1, 1, 0)
x$s3<- ifelse(sel$s3==1, 1, 0)
#x$`s&!d`<- ifelse(sel$stealing_1_0 == 1 &sel$object_dropped_accidentally_0==0, 1, 0)
#x$`!s&d`<- ifelse(sel$stealing_1_0 == 0 &sel$object_dropped_accidentally_0==1, 1, 0)
#x$`!s&!d`<- ifelse(sel$stealing_1_0 == 0 &sel$object_dropped_accidentally_0==0, 1, 0)
#sel$sanity <- rowSums(sel[,4:7])
x <- x %>% group_by(ev)
x <- x %>% summarise(
s1 = mean(s1),
s2 = mean(s2),
s3 = mean(s3),
)
x$Network <- "F"
x$incompatible <- 0
#Sqrt( (P(d&s | v_i) - F(d&s | v_i))^2 + (P(not-d&s | v_i) - F(not-d&s | v_i))^2  + (P(d&not-s | v_i) - F(d&not-s | v_i))^2+ (P(not-d&not-s | v_i) - F(not-d&not-s | v_i))^2 )
full <- rbind(x, fp)
View(full)
full = subset(full, select = -c(incompatible))
y <- full %>% pivot_longer(!c(ev, Network), names_to="valuation", values_to="posterior")
y$Posterior1 <- as.numeric(y$posterior)
colnames(y)
#y$labels <- with(y, reorder())
y$ev <- factor(y$ev,
levels = c(
"(0, 0, 1, 0)", #inc
"(0, 0, 1, 1)", # inc
"(0, 1, 1, 0)", #inc
"(1, 0, 1, 0)", #inc
"(1, 0, 1, 1)", #inc
"(1, 1, 1, 0)", #inc
"(1, 1, 0, 0)", #inc
"(0, 1, 1, 1)",
"(1, 0, 0, 0)", #N
"(1, 1, 1, 1)",
"(1, 1, 0, 1)",
"(1, 0, 0, 1)",
"(0, 1, 0, 1)",
"(0, 1, 0, 0)", #N
"(0, 0, 0, 1)", #D
"(0, 0, 0, 0)" # N
))
ev_state_labels <- y$ev
y$ev_state_labels <- ev_state_labels
levels(y$ev_state_labels)<- c("v16 = (0, 0, 1, 0)", #inc
"v15 = (0, 0, 1, 1)", # inc
"v14 = (0, 1, 1, 0)", #inc
"v13 = (1, 0, 1, 0)", #inc
"v12 = (1, 0, 1, 1)", #inc
"v11 = (1, 1, 1, 0)", #inc
"v10 = (1, 1, 0, 0)", #inc
"v9 = (0, 1, 1, 1)",
"v8 = (1, 0, 0, 0)", #N
"v7 = (1, 1, 1, 1)",
"v6 = (1, 1, 0, 1)",
"v5 = (1, 0, 0, 1)",
"v4 = (0, 1, 0, 1)",
"v3 = (0, 1, 0, 0)", #N
"v2 = (0, 0, 0, 1)", #D
"v1 = (0, 0, 0, 0)" # N
)
#View(y)
y$valuation <- factor(y$valuation,
levels = c(
"s1",
"s2",
"s3"))
y <- y %>%
mutate(Network = recode(Network, F = "frequency", GG = 'alg-unit', GD = 'alg-cons', fullVlek = 'hum-unit', fD = 'hum-cons'))
y$Network <- factor(y$Network, levels = c(
"frequency",
"alg-unit",
"alg-cons",
"hum-unit",
"hum-cons"))
ggplot(y, aes(fill=valuation, y=Posterior1, x=Network)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(name="Posterior", labels =c(
"P(scn1)",
"P(scn2)",
"P(scn3)"), values=cbbPaletteW)+
facet_wrap(~ev_state_labels,  ncol=4) +
xlab("") + ylab("Posterior Probabilities") +
theme(axis.text.x = element_text(angle = -45))
# Analyse based on Vlek Network
raw_data_file <- "Desktop/phd/code/data10000/GroteMarktPrivate.csv"
posteriorsV <- "Desktop/phd/writing/paper1/vlekNetworkPosteriors/Posteriors.csv"
posteriorsG <- "Desktop/phd/writing/paper1/vlekNetworkPosteriors/PosteriorsGenerated.csv"
### generate BNs
library(bnlearn)
library(tidyverse)
library(readr)
df <- read_csv(raw_data_file)
f <- nrow(df)
df$s1 <- ifelse(df$motive_1_0 == 1 & df$sneak_1_0 == 1 & df$stealing_1_0, 1, 0)
df$s2 <- ifelse(df$object_dropped_accidentally_0 == 1, 1, 0)
df$s3 <- ifelse(df$s1 == 0 & df$s2 == 0, 1, 0)
#df$constraint <- ifelse(df$scn1 == 0 & df$scn2 == 0, 1, 0)
nrow(df %>% filter(s3 == 1))/f
nrow(df %>% filter(s2 == 1))/f
nrow(df %>% filter(s1 == 1))/f
nrow(df %>% filter(s3 == 1))/f+nrow(df %>% filter(s2 == 1))/f+nrow(df %>% filter(s1 == 1))/f
nrow(df %>% filter(E_psych_report_1_0 == 0 & motive_1_0 == 1))/(nrow(df %>% filter(motive_1_0 == 1)))
fKB <- data.frame(lapply(df, factor))
View(fKB)
raw_data_file <- "GroteMarktPrivate.csv"
posteriorsV <- "Posteriors.csv"
posteriorsG <- "PosteriorsGenerated.csv"
### generate BNs
library(bnlearn)
library(tidyverse)
library(readr)
df <- read_csv(raw_data_file)
f <- nrow(df)
df$s1 <- ifelse(df$motive_1_0 == 1 & df$sneak_1_0 == 1 & df$stealing_1_0, 1, 0)
df$s2 <- ifelse(df$object_dropped_accidentally_0 == 1, 1, 0)
df$s3 <- ifelse(df$s1 == 0 & df$s2 == 0, 1, 0)
#df$constraint <- ifelse(df$scn1 == 0 & df$scn2 == 0, 1, 0)
nrow(df %>% filter(s3 == 1))/f
nrow(df %>% filter(s2 == 1))/f
nrow(df %>% filter(s1 == 1))/f
nrow(df %>% filter(s3 == 1))/f+nrow(df %>% filter(s2 == 1))/f+nrow(df %>% filter(s1 == 1))/f
nrow(df %>% filter(E_psych_report_1_0 == 0 & motive_1_0 == 1))/(nrow(df %>% filter(motive_1_0 == 1)))
fKB <- data.frame(lapply(df, factor))
View(fKB)
p1 <- read_csv(posteriorsG)
fp1 <- data.frame(lapply(p1, factor))
colnames(fp1) <- c("Network", "ev", "s1", "s2", "s3", "n", "incompatible")
fp1$incompatible <- 0
fp1 <- subset(fp1, select = -c(n))
View(fp1)
p <- read_csv(posteriorsV)
fp <- data.frame(lapply(p, factor))
colnames(fp) <- c("Network", "ev", "s1", "s2", "s3", "n", "incompatible")
fp$incompatible <- 0
fp <- subset(fp, select = -c(n))
View(fp)
fp <- rbind(fp1, fp)
View(fp)
k <- fKB
k$evSet <- paste(k$E_psych_report_1_0, k$E_camera_1, k$E_camera_seen_stealing_1_0, k$E_object_gone_0, sep=", ")
k$ev <- paste0("(", k$evSet, ")")
sel <- subset(k, select = c(s1, s2, s3, ev))
x <- data.frame(matrix(nrow = 10000, ncol = 0))
x$ev <- k$ev
x$s1<- ifelse(sel$s1==1, 1, 0)
x$s2<- ifelse(sel$s2==1, 1, 0)
x$s3<- ifelse(sel$s3==1, 1, 0)
#x$`s&!d`<- ifelse(sel$stealing_1_0 == 1 &sel$object_dropped_accidentally_0==0, 1, 0)
#x$`!s&d`<- ifelse(sel$stealing_1_0 == 0 &sel$object_dropped_accidentally_0==1, 1, 0)
#x$`!s&!d`<- ifelse(sel$stealing_1_0 == 0 &sel$object_dropped_accidentally_0==0, 1, 0)
#sel$sanity <- rowSums(sel[,4:7])
x <- x %>% group_by(ev)
x <- x %>% summarise(
s1 = mean(s1),
s2 = mean(s2),
s3 = mean(s3),
)
x$Network <- "F"
x$incompatible <- 0
#Sqrt( (P(d&s | v_i) - F(d&s | v_i))^2 + (P(not-d&s | v_i) - F(not-d&s | v_i))^2  + (P(d&not-s | v_i) - F(d&not-s | v_i))^2+ (P(not-d&not-s | v_i) - F(not-d&not-s | v_i))^2 )
full <- rbind(x, fp)
View(full)
full = subset(full, select = -c(incompatible))
y <- full %>% pivot_longer(!c(ev, Network), names_to="valuation", values_to="posterior")
y$Posterior1 <- as.numeric(y$posterior)
colnames(y)
#y$labels <- with(y, reorder())
y$ev <- factor(y$ev,
levels = c(
"(0, 0, 1, 0)", #inc
"(0, 0, 1, 1)", # inc
"(0, 1, 1, 0)", #inc
"(1, 0, 1, 0)", #inc
"(1, 0, 1, 1)", #inc
"(1, 1, 1, 0)", #inc
"(1, 1, 0, 0)", #inc
"(0, 1, 1, 1)",
"(1, 0, 0, 0)", #N
"(1, 1, 1, 1)",
"(1, 1, 0, 1)",
"(1, 0, 0, 1)",
"(0, 1, 0, 1)",
"(0, 1, 0, 0)", #N
"(0, 0, 0, 1)", #D
"(0, 0, 0, 0)" # N
))
ev_state_labels <- y$ev
y$ev_state_labels <- ev_state_labels
levels(y$ev_state_labels)<- c("v16 = (0, 0, 1, 0)", #inc
"v15 = (0, 0, 1, 1)", # inc
"v14 = (0, 1, 1, 0)", #inc
"v13 = (1, 0, 1, 0)", #inc
"v12 = (1, 0, 1, 1)", #inc
"v11 = (1, 1, 1, 0)", #inc
"v10 = (1, 1, 0, 0)", #inc
"v9 = (0, 1, 1, 1)",
"v8 = (1, 0, 0, 0)", #N
"v7 = (1, 1, 1, 1)",
"v6 = (1, 1, 0, 1)",
"v5 = (1, 0, 0, 1)",
"v4 = (0, 1, 0, 1)",
"v3 = (0, 1, 0, 0)", #N
"v2 = (0, 0, 0, 1)", #D
"v1 = (0, 0, 0, 0)" # N
)
#View(y)
y$valuation <- factor(y$valuation,
levels = c(
"s1",
"s2",
"s3"))
y <- y %>%
mutate(Network = recode(Network, F = "frequency", GG = 'alg-unit', GD = 'alg-cons', fullVlek = 'hum-unit', fD = 'hum-cons'))
y$Network <- factor(y$Network, levels = c(
"frequency",
"alg-unit",
"alg-cons",
"hum-unit",
"hum-cons"))
ggplot(y, aes(fill=valuation, y=Posterior1, x=Network)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(name="Posterior", labels =c(
"P(scn1)",
"P(scn2)",
"P(scn3)"), values=cbbPaletteW)+
facet_wrap(~ev_state_labels,  ncol=4) +
xlab("") + ylab("Posterior Probabilities") +
theme(axis.text.x = element_text(angle = -45))
# Analyse based on Vlek Network
cbbPaletteW <- c( "#E69F00", "#56B4E9", "#009E73",  "#FF3131", "#808080", "#F0E442", "#D55E00")
ggplot(y, aes(fill=valuation, y=Posterior1, x=Network)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(name="Posterior", labels =c(
"P(scn1)",
"P(scn2)",
"P(scn3)"), values=cbbPaletteW)+
facet_wrap(~ev_state_labels,  ncol=4) +
xlab("") + ylab("Posterior Probabilities") +
theme(axis.text.x = element_text(angle = -45))
raw_data_file <- "GroteMarktPrivate.csv"
